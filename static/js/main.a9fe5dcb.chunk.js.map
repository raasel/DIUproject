{"version":3,"sources":["Components/Searchuser.js","Components/Manageissue.js","Components/Issue.js","Components/Header.js","Components/Logout.js","Components/Logcss.js","Front/About.js","Front/Teacher.js","Front/Sudent.js","Front/Search.js","Front/Footer.js","Front/Header2.js","App.js","serviceWorker.js","index.js"],"names":["Searchuser","props","changeHandler","e","setState","target","name","value","state","id","user","fetch","then","res","json","console","log","this","className","for","type","onChange","class","map","us","toString","department","role","number","email","Component","Manageissue","edit","issue","afteredit","fetch1","method","headers","body","JSON","stringify","date","catch","error","alert","moment","format","readers_id","ISBN","issue_date","reserve_date","return_date","data-toggle","title","onClick","Issue","submitHandler","preventDefault","axios","post","response","isbn","reader_id","book","reader","onSubmit","Name","re","Header","localStorage","getItem","removeItem","window","parent","location","href","to","exact","activeClassName","Button","logout","path","component","Login","username","password","wrong","jwtt","bind","jwt","Uname","Pword","setItem","token","placeholder","About","Teacher","success","tid","tname","depart","mno","Student","insid","Search","renderCountry","d","search","toLowerCase","Serial","Category","Author","onchange","filteredCountries","filter","country","indexOf","Footer","Date","getDate","toDateString","timer","time","admin","setInterval","App","Header2","Logcss","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9fe5dcb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Header.css'\r\n\r\nclass Searchuser extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n\t\tthis.state = {\r\n\t\t\tid: '',\r\n\t\t\tuser:[],\r\n\t\t}\r\n\t}\r\n    componentDidMount() {\r\n        fetch('/readers')\r\n          .then(res => res.json())\r\n          .then(user => this.setState({user}, () => console.log('user fetched...', user)));\r\n      }\r\n    changeHandler = e => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value })\r\n\t}\r\n\r\n    render() {\r\n        const {id}=this.state\r\n        return (\r\n            <div className=\"conatainer\">\r\n                 <h4>&nbsp;</h4>\r\n                <div className=\"row container\">\r\n                    <div className=\"col-sm-4\">\r\n\r\n                    </div>\r\n                    \r\n                    <div className=\"col-sm-4 csshobe\">\r\n                    <div className=\"form-group\">  <label for=\"id\">Search user Id:</label>\r\n\t\t\t\t\t\t<input className=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n                            name=\"id\"\r\n                            id=\"id\"\r\n\t\t\t\t\t\t\tvalue={id}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n                    </div> \r\n                    <div className=\"col-sm-4\">\r\n\r\n                    </div>\r\n                    {/* <div className=\"col-sm-4\">\r\n\r\n                    </div> */}\r\n                    </div>\r\n                   \r\n                    {/* <br></br> <br></br><br></br><br></br> */}\r\n                    <div className=\"container\">\r\n                    <table class=\"table table-hover\">\r\n    <thead>\r\n      <tr>\r\n        <th>User Id</th>\r\n        <th>Name</th>\r\n        <th>Department</th>\r\n        <th>Role</th>\r\n        <th>Phone Number</th>\r\n        <th>Email</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n        {this.state.user.map(us=> \r\n        {if(this.state.id === us.id.toString())\r\n            return(\r\n                <tr>\r\n                <td>{us.id}</td>\r\n                <td>{us.name}</td>\r\n                <td>{us.department}</td>\r\n                <td>{us.role}</td>\r\n                <td>{us.number}</td>\r\n                <td>{us.email}</td>\r\n              </tr>\r\n                )\r\n            else if(!this.state.id){\r\n                return(\r\n                    <tr>\r\n                <td>{us.id}</td>\r\n                <td>{us.name}</td>\r\n                <td>{us.department}</td>\r\n                <td>{us.role}</td>\r\n                <td>{us.number}</td>\r\n                <td>{us.email}</td>\r\n              </tr>\r\n                )\r\n            }\r\n            }\r\n                \r\n    \r\n    \r\n    )}\r\n         \r\n      \r\n    </tbody>\r\n  </table>\r\n                \r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Searchuser;","import React, { Component } from 'react';\r\nimport './Header.css'\r\nimport moment from 'moment'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport default class Manageissue extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n\t\tthis.state = {\r\n\t\t\tid: '',\r\n            user:[],\r\n            issue: '',\r\n            date: moment().format('L')\r\n\t\t}\r\n\t}\r\n    componentDidMount() {\r\n        fetch('/issue')\r\n          .then(res => res.json())\r\n          .then(user => this.setState({user}, () => console.log('user fetched...', user)));\r\n          this.afteredit();\r\n      }\r\n    changeHandler = e => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value })\r\n\t}\r\nedit= (issue) =>{\r\n\r\n    this.setState({\r\n        issue: issue\r\n    })\r\n    this.afteredit();\r\n}\r\nfetch1=()=>{\r\n    fetch('/issue')\r\n    .then(res => res.json())\r\n    .then(user => this.setState({user}, () => console.log('user fetched...', user)));\r\n}\r\nafteredit= ()=>{\r\n    fetch(\"http://localhost:5000/issues\", {\r\n        method: 'POST',\r\n        headers: {\r\n                        'Accept':'application/json',\r\n                        'Content-Type':'application/json',\r\n                      },\r\n    body: JSON.stringify(\r\n      {\r\n        issue :this.state.issue,\r\n        date :this.state.date,\r\n      }\r\n    )\r\n  })\r\n  .catch(function (error) {\r\n          alert(error);\r\n   });\r\n  this.fetch1();\r\n}\r\n    render() {\r\n        const {id}=this.state\r\n        return (\r\n            <div className=\"conatainer\">\r\n                 <h4>&nbsp;</h4>\r\n                <div className=\"row container\">\r\n                    <div className=\"col-sm-4\">\r\n\r\n                    </div>\r\n                    \r\n                    <div className=\"col-sm-4 csshobe\">\r\n                    <div className=\"form-group\">  <label for=\"id\">Enter user Id:</label>\r\n\t\t\t\t\t\t<input className=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n                            name=\"id\"\r\n                            id=\"id\"\r\n\t\t\t\t\t\t\tvalue={id}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n                    </div> \r\n                    <div className=\"col-sm-4\">\r\n\r\n                    </div>\r\n                    {/* <div className=\"col-sm-4\">\r\n\r\n                    </div> */}\r\n                    </div>\r\n                   \r\n                    {/* <br></br> <br></br><br></br><br></br> */}\r\n                    <div className=\"container\">\r\n                    <table class=\"table \">\r\n    <thead>\r\n      <tr>\r\n        <th>Readers Id</th>\r\n        <th>ISBN</th>\r\n        <th>Issue Date</th>\r\n        <th>Reserve Date</th>\r\n        <th>Return Date</th>\r\n        <th>Action</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n        {this.state.user.map(us=> \r\n        {if(this.state.id === us.readers_id)\r\n            return(\r\n                <tr>\r\n                <td>{us.readers_id}</td>\r\n                <td>{us.ISBN}</td>\r\n                <td>{us.issue_date}</td>\r\n                <td>{us.reserve_date}</td>\r\n                <td>{us.return_date}</td>\r\n                <td data-toggle=\"tooltip\" title=\"Mark As Return Book\"> <button   onClick={()=>this.edit(us.readers_id)} ><i class=\"fas fa-check-square\"></i></button> </td>\r\n              </tr>\r\n                )\r\n            else if(!this.state.id){\r\n                return(\r\n                    <tr>\r\n                <td>{us.readers_id}</td>\r\n                <td>{us.ISBN}</td>\r\n                <td>{us.issue_date}</td>\r\n                <td>{us.reserve_date}</td>\r\n                <td>{us.return_date}</td>\r\n                <td data-toggle=\"tooltip\" title=\"Mark As Return Book\"> <button   onClick={()=>this.edit(us.readers_id)} ><i class=\"fas fa-check-square\"></i></button> </td>\r\n              </tr>\r\n                )\r\n            }\r\n            }\r\n    )}\r\n    </tbody>\r\n  </table>   \r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nclass Issue extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n            isbn: '',\r\n            reader_id: '',\r\n            book: [],\r\n            reader: [],\r\n\t\t}\r\n\t}\r\n    componentDidMount() {\r\n        fetch('/book')\r\n          .then(res => res.json())\r\n          .then(book => this.setState({book}, () => console.log('book fetched...', book)));\r\n        fetch('/readers')\r\n          .then(res => res.json())\r\n          .then(reader => this.setState({reader}, () => console.log('reader fetched...', reader)));\r\n      }\r\n\tchangeHandler = e => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\tsubmitHandler = e => {\r\n\t\te.preventDefault()\r\n\t\tconsole.log(this.state)\r\n\t\taxios\r\n\t\t\t.post('http://localhost:5000/api/tregpost', this.state)\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response)\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t})\r\n\t}\r\n\r\n\trender()  {\r\n\t\tconst { isbn,reader_id } = this.state\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Issued A Book</h1>\r\n                <div  class=\"row\">\r\n                    <div className=\"col-sm-3\"></div>\r\n\t\t\t\t\t<div  className=\"col-sm-6 csshobe\">\r\n\t\t\t\t<form onSubmit={this.submitHandler}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label for=\"tid\">Enter ISBN:</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"isbn\"\r\n\t\t\t\t\t\t\tvalue={isbn}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n                    {this.state.book.map(book =>{\r\n                         if(this.state.isbn === book.ISBN)\r\n                         return(\r\n                         <h4>Book: {book.Name} Is Available</h4>\r\n                         )\r\n                    })}\r\n                    \r\n\t\t\t\t\t<div className=\"form-group\">  <label for=\"reader_id\">Enter Reader Id:</label>\r\n\t\t\t\t\t\t<input className=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"reader_id\"\r\n\t\t\t\t\t\t\tvalue={reader_id}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n                    {this.state.reader.map(re =>{\r\n                         if(this.state.reader_id === re.id)\r\n                         return(\r\n                         <h4>Name: {re.name} Is Verified</h4>\r\n                         )\r\n                    })}\r\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\">SUBMIT</button>\r\n\t\t\t\t</form> </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t}\r\n\r\nexport default Issue\r\n","import React,{Component} from 'react'\r\nimport Searchuser from './Searchuser'\r\nimport Manageissue from './Manageissue'\r\nimport Issue from './Issue'\r\n\r\nimport { BrowserRouter as Router,Switch, Route, Link } from \"react-router-dom\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport Logcss from './Logcss';\r\nimport Logout from './Logout';\r\nimport { Button } from 'reactstrap';\r\nimport './Header.css'\r\n\r\nclass Header extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    const token = localStorage.getItem(\"token\")\r\n    let log = true\r\n    if(token === null)\r\n    {\r\n      log = false\r\n    }\r\n    this.state={\r\n      log\r\n    }\r\n  }\r\n\r\n  logout(){\r\n    localStorage.removeItem(\"token\");\r\n    window.parent.location = window.parent.location.href;\r\n  }\r\n render() { \r\n  if(!this.state.log)\r\n  {\r\n    return <Logcss/>\r\n  } \r\n  return(\r\n      <Router>\r\n        <div className=\"csstest\">\r\n        <div>\r\n          <div className=\"divnav\">\r\n          <NavLink  className=\"nav-link\"  to={\"/\"}><h1> <h6>&nbsp;</h6>\r\n            <i>Library Management</i> <h6>&nbsp;</h6>\r\n        </h1></NavLink>\r\n          </div>\r\n        \r\n     <nav  className=\"navbar navbar-expand-sm navbar-dark sticky-top\">\r\n  <ul className=\"navbar-nav\">\r\n    <li className=\"nav-item active\">\r\n      <NavLink exact activeClassName=\"hactive\" className=\"nav-link\"  to={\"/Searchuser\"}>Search Users</NavLink>\r\n    </li>\r\n    <li className=\"nav-item active\">\r\n      <NavLink exact  activeClassName=\"hactive\" className=\"nav-link\"  to={\"/issue\"}>Issue New Book</NavLink>\r\n    </li>\r\n    <li className=\"nav-item active\">\r\n      <NavLink exact activeClassName=\"hactive\" className=\"nav-link\" to={\"/manageissue\"} >Manage Issue Book</NavLink>\r\n    </li>\r\n    <li className=\"nav-item active\">\r\n      <Button  className=\"nav-link\" onClick={() =>{this.logout()}} >Log Out</Button>\r\n    </li>\r\n  </ul>\r\n        </nav>\r\n        <Switch>\r\n          <Route exact path='/' component={Searchuser} />\r\n          <Route exact path='/Searchuser' component={Searchuser} />\r\n          {/* <Route exact path='/logout' component={Logout} /> */}\r\n          {/* <Route exact path='/login'  component={Login} /> */}\r\n          <Route  exact path='/issue' component={Issue} />\r\n          <Route  exact path='/manageissue' component={Manageissue} />\r\n        </Switch>\r\n        </div> </div>\r\n    </Router>\r\n    );\r\n }\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport { Button } from 'reactstrap';\r\n\r\nexport default class Logout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        localStorage.removeItem(\"token\")\r\n        this.changeLog= this.changeLog.bind(this)\r\n    }\r\n\r\nchangeLog(){\r\n    { window.parent.location = window.parent.location.href; }\r\n}\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Log Out Successfully</h1>\r\n                <Button className=\"btn btn-primary\" onClick={this.changeLog}>Refresh</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Header from './Header'\r\nimport './Style.css'\r\n\r\nexport default class Login extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        const token = localStorage.getItem(\"token\")\r\n    let log = true\r\n    if(token === null)\r\n    {\r\n      log = false\r\n    }\r\n        this.state={\r\n            username: '',\r\n            password: '',\r\n            wrong: '',\r\n            jwtt: [],\r\n            log \r\n        }\r\n        this.changeHandler= this.changeHandler.bind(this)\r\n        this.submitHandler= this.submitHandler.bind(this)\r\n    }\r\ncomponentDidMount(){\r\n    fetch('/jwtt')\r\n        .then(res => res.json())\r\n        .then(jwtt => this.setState({jwtt}, () => console.log('attendreport fetched...', jwtt)));\r\n}\r\n    changeHandler(e){\r\nthis.setState({\r\n    [e.target.name]: e.target.value\r\n})\r\n    }\r\n    submitHandler(e){\r\n        e.preventDefault()\r\n        const {username, password} = this.state\r\n        this.state.jwtt.map(jwt => {\r\n            if(username === jwt.Uname && password === jwt.Pword)\r\n            {\r\n                localStorage.setItem(\"token\",jwt.token)\r\n                this.setState({\r\n                    log: true\r\n                })\r\n            }\r\n            else {\r\n             this.setState({\r\n                 wrong: \"Wrong Password!\"\r\n             })\r\n            }\r\n        }\r\n            )\r\n    }\r\n    render() {\r\n        if(this.state.log){\r\n            return (\r\n                <Header/>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <h1 className=\"admin\">Admin Panel</h1>\r\n                <div className=\"login-box\">\r\n\t\t\t\t<h1>Login</h1>\r\n                <div>\r\n                    \r\n\t\t\t\t\t<div>\r\n\t\t\t\t<form onSubmit={this.submitHandler}>\r\n\t\t\t\t\t<div className=\"textbox\">\r\n                    <i class=\"fas fa-user\"></i>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n                            name=\"username\"\r\n                            placeholder = \"Username\"\r\n\t\t\t\t\t\t\tvalue={this.state.username}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"textbox\">\r\n\t\t\t\t\t<i class=\"fas fa-lock\"></i>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n                            name=\"password\"\r\n                            placeholder = \"Password\"\r\n\t\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button type=\"submit\" className=\"btnn\">Submit</button>\r\n\t\t\t\t</form> </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n            <h1 className=\"wrong\">{this.state.wrong}</h1>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport  '../Front/Css/Footer.css'\r\nimport Clock from 'react-live-clock';\r\n\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n        <h1>Scenario Of Project</h1>\r\n                <div  class=\"row\">\r\n                    <div className=\"col-sm-1\"></div>\r\n\t\t\t\t\t<div className=\"col-sm-10 csshobe\">\r\n\t\t\t\t   <p > <b className=\"fontsize\">\r\n                   The Library Management System is a Library Management website for monitoring and controlling the transactions in a library. There has high authentication system. Authentication has a username & password for login. Only staff can log in. The staff has a name, id. The staff maintains books from the library. A book has Author, SR no which is unique, publisher, price, category, title, ISBN. The staff also keeps track of readers.  A reader has a unique id, first name, last name,  department, phone no.  Readers issue books from library and books reserve date reserve under readers id. Readers have to return books within return dates.\r\n                   </b> </p>\r\n\t\t\t\t </div>\r\n\t\t\t\t </div>\r\n\r\n\r\n               <div className=\"row footer\">\r\n                   <div className=\"col-sm-4\">\r\n                    <h2 className=\"deve\"> <u>Developer</u> </h2>\r\n                    <h6>Md Rasel Ahmed</h6>\r\n                    <h6>Mohammad Ali</h6>\r\n                    <h6>Sazzat Hossain</h6>\r\n                    <h6>Sanjeda Akter Oyshi</h6>\r\n                   </div>\r\n                   <div className=\"col-sm-4\">\r\n\r\n                   {/* <dib className=\"row\">\r\n                       <h2 className=\"clock col-sm-4\">  <Clock   format={'HH:mm:ss'} ticking={true} timezone={'UTC +6'} /></h2>\r\n           <h2 className=\"date\">{  new Date().toDateString() }</h2>\r\n           </dib> */}\r\n                   </div>\r\n                   <div className=\"col-sm-4\">\r\n                   <h2 className=\"deve\"> <u>Contact Us</u> </h2>\r\n                   <h6>Mirpur 1, Dhaka1216</h6>\r\n                   <h6>Sukrabad, Dhanmondi</h6>\r\n                  <p className=\"deve\"> <a  href=\"https://www.facebook.com/RaaaseL\"> <i class=\"fab fa-facebook-square\"></i> </a> </p>\r\n                  <p className=\"deve\"><i class=\"fab fa-twitter-square\"></i></p> \r\n                   </div>\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './Css/Teacher.css'\r\nclass Teacher extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\ttid: '',\r\n\t\t\ttname: '',\r\n\t\t\tdepart:'',\r\n\t\t\tmno: '',\r\n\t\t\temail: '',\r\n\t\t\tsuccess: '',\r\n\t\t}\r\n\t}\r\n\r\n\tchangeHandler = e => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value })\r\n\t}\r\n\r\n\tsubmitHandler = e => {\r\n\t\te.preventDefault()\r\n\t\tconsole.log(this.state)\r\n\t\taxios\r\n\t\t\t.post('http://localhost:5000/treg', this.state)\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response)\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t})\r\n\t\t\tthis.setState({\r\n\t\t\t\tsuccess: \"Submit To Server\"\r\n\t\t\t})\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {  tid, tname, mno, email,depart } = this.state\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Teacher Registration</h1>\r\n                <div  class=\"row\">\r\n                    <div className=\"col-sm-3\"></div>\r\n\t\t\t\t\t<div  className=\"col-sm-6 csshobe\">\r\n\t\t\t\t<form onSubmit={this.submitHandler}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label for=\"tid\">Teacher ID:</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"tid\"\r\n\t\t\t\t\t\t\tvalue={tid}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">  <label for=\"tname\">Teacher Full Name:</label>\r\n\t\t\t\t\t\t<input className=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"tname\"\r\n\t\t\t\t\t\t\tvalue={tname}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">  <label for=\"depart\">Department:</label>\r\n\t\t\t\t\t\t<input className=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"depart\"\r\n\t\t\t\t\t\t\tvalue={depart}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">       <label for=\"tno\">Teacher Number:</label>\r\n\t\t\t\t\t\t<input className=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tname=\"mno\"\r\n\t\t\t\t\t\t\tvalue={mno}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div> \r\n\t\t\t\t\t<div className=\"form-group\"> <label for=\"email\">Email Address:</label>\r\n\t\t\t\t\t\t<input className=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\">Register</button>\r\n\t\t\t\t</form> \r\n\t\t<h6>{this.state.success}</h6>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Teacher\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './Css/Teacher.css'\r\nclass Student extends Component {\r\n\tconstructor(props) {\r\n        super(props)\r\n        \r\n\t\tthis.state = {\r\n\t\t\tinsid: '',\r\n\t\t\ttid: '',\r\n\t\t\ttname: '',\r\n\t\t\tdepart:'',\r\n\t\t\tmno: '',\r\n\t\t\temail: '',\r\n\t\t\tsuccess: '',\r\n\t\t}\r\n\t}\r\n\r\n\tchangeHandler = e => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value })\r\n\t}\r\n\r\n\tsubmitHandler = e => {\r\n\t\te.preventDefault()\r\n\t\tconsole.log(this.state)\r\n\t\taxios\r\n\t\t\t.post('http://localhost:5000/sreg', this.state)\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response)\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t})\r\n\t\t\tthis.setState({\r\n\t\t\t\tsuccess: \"Submit To Server\"\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { insid, tid, tname, mno, email,depart } = this.state\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Student Registration</h1>\r\n                <div  class=\"row\">\r\n                    <div className=\"col-sm-3\"></div>\r\n\t\t\t\t\t<div className=\"col-sm-6 csshobe\">\r\n\t\t\t\t<form onSubmit={this.submitHandler}>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label for=\"tid\">Student ID:</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"tid\"\r\n\t\t\t\t\t\t\tvalue={tid}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">  <label for=\"tname\">Student Full Name:</label>\r\n\t\t\t\t\t\t<input className=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"tname\"\r\n\t\t\t\t\t\t\tvalue={tname}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">  <label for=\"depart\">Department:</label>\r\n\t\t\t\t\t\t<input className=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"depart\"\r\n\t\t\t\t\t\t\tvalue={depart}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">       <label for=\"tno\">Student Number:</label>\r\n\t\t\t\t\t\t<input className=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tname=\"mno\"\r\n\t\t\t\t\t\t\tvalue={mno}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div> \r\n\t\t\t\t\t<div className=\"form-group\"> <label for=\"email\">Email Address:</label>\r\n\t\t\t\t\t\t<input className=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\">Register</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t<h6>{this.state.success}</h6> </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Student\r\n","import React, { Component } from 'react'\r\n\r\nexport class Search extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      book: [],\r\n      search: '',\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch('/book')\r\n      .then(res => res.json())\r\n      .then(book => this.setState({book}, () => console.log('teacheratn fetched...', book)));\r\n\r\n      // setInterval(() => {\r\n      //   this.refreshh()\r\n      // }, 10000);\r\n  }\r\n\r\n  renderCountry = d => {\r\n    const { search } = this.state;\r\n    var code = d.Name.toLowerCase();\r\n    return (\r\n      <div>\r\n      \r\n          <table class=\"table table-hover\">\r\n    <thead>\r\n      <tr>\r\n        <th>Serial</th>\r\n        <th>Book Name</th>\r\n        <th>Category</th>\r\n        <th>Writer</th>\r\n        <th>Book Id</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n         <tr>\r\n           <td>{d.Serial}</td>\r\n           <td>{d.Name} </td> \r\n           <td>{d.Category}</td>\r\n           <td>{d.Author}</td>\r\n           <td>{d.ISBN}</td>\r\n         </tr>\r\n    </tbody>\r\n  </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onchange = e => {\r\n    this.setState({ search: e.target.value });\r\n  };\r\n  \r\n    render() {\r\n     const { search } = this.state;\r\n     const filteredCountries = this.state.book.filter(country => {\r\n      return country.Name.toLowerCase().indexOf(search.toLowerCase()) !== -1;\r\n       });\r\n        return (\r\n            <div className=\"container\"> <h2>&nbsp;</h2>\r\n                <input class=\"form-control col-sm-2\" type=\"text\"  onChange={this.onchange} placeholder=\"Search Books\"/> <h2>&nbsp;</h2>\r\n                <h1 >Your Searched Book</h1>\r\n                <table class=\"table table-hover\">\r\n    <thead>\r\n      <tr>\r\n        <th>Serial</th>\r\n        <th>Book Name</th>\r\n        <th>Category</th>\r\n        <th>Writer</th>\r\n        <th>Book Id</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n    {filteredCountries.map(d => {\r\n           if(this.state.search !== '')   \r\n            return (\r\n              <tr>\r\n           <td>{d.Serial}</td>\r\n           <td>{d.Name} </td> \r\n           <td>{d.Category}</td>\r\n           <td>{d.Author}</td>\r\n           <td>{d.ISBN}</td>\r\n               </tr>\r\n                )\r\n              })}\r\n         \r\n    </tbody>\r\n  </table>\r\n               \r\n               </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search\r\n","import React, { Component } from 'react';\r\nimport Clock from 'react-live-clock';\r\nimport  '../Front/Css/Footer.css'\r\n\r\nclass Footer extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            date: ''\r\n        }\r\n    }\r\ncomponentDidMount(){\r\n    console.log(new Date().getDate());\r\n}\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"foot\">\r\n                   \r\n            <h2 className=\"date\">© Online Library Management System, {  new Date().toDateString() }</h2>\r\n          \r\n         </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React,{Component} from 'react'\r\nimport { BrowserRouter as Router,Switch, Route, Link,Redirect } from \"react-router-dom\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport About from './About'\r\nimport Teacher from './Teacher'\r\nimport Student from './Sudent'\r\nimport Search from './Search'\r\nimport Footer from './Footer'\r\nimport Logcss from '../Components/Logcss'\r\nimport axios from 'axios'\r\nimport Clock from 'react-live-clock';\r\nimport moment from 'moment'\r\n// import './Header2.css'\r\n\r\nclass Header extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      admin: '',\r\n      time: moment().format('LTS'),\r\n    }\r\n  }\r\ncomponentDidMount(){\r\n  setInterval(this.timer, 1000);\r\n}\r\n\r\ntimer=()=>{\r\n  this.setState({\r\n    time: moment().format('LTS')\r\n  })\r\n}\r\n\r\nadmin=()=>{\r\n  this.setState({\r\n    admin: \"admin\"\r\n  })\r\n}\r\n\r\n render()\r\n { \r\n  if(this.state.admin)\r\n  {\r\n    return (\r\n      <Redirect to=\"/Logcss\"/>\r\n    )\r\n  } \r\n  return(\r\n      <Router>\r\n        <div className=\"Appbody\">\r\n          <div className=\"divnav\">\r\n          <NavLink  className=\"nav-link\"  to={\"/\"}><h1>\r\n            Library Management \r\n        </h1></NavLink>\r\n          </div>\r\n     <nav  className=\"navbar  navbar-expand-sm navbar-dark sticky-top\"> \r\n    {/* <input class=\"form-control mr-sm-2\" type=\"Submit\" placeholder=\"Search Books\"/> */}\r\n    {/* <button class=\"btn btn-dark col-sm-1.5\" type=\"submit\" ><b>Search Book</b></button> */}\r\n\r\n      <NavLink exact activeClassName=\"hactive\" className=\"nav-link btn btn-dark col-sm-1.5\"  to={\"/search\"}>Search Book</NavLink>\r\n  <h2 className=\"clock\"> {this.state.time}</h2>\r\n  <ul className=\"navbar-nav ml-auto\">\r\n    <li className=\"nav-item active\">\r\n      <NavLink exact activeClassName=\"hactive\" className=\"nav-link\"  to={\"/\"}>About</NavLink>\r\n    </li>\r\n    <li className=\"nav-item active\">\r\n      <NavLink exact  activeClassName=\"hactive\" className=\"nav-link\"  to={\"/Teacher\"}>Teacher Registration</NavLink>\r\n    </li>\r\n    <li className=\"nav-item active\">\r\n      <NavLink exact activeClassName=\"hactive\" className=\"nav-link\" to={\"/Student\"}>Student Registration</NavLink>\r\n    </li>\r\n    <li className=\"nav-item active\">\r\n    <Button  className=\"nav-link\" onClick={() =>{this.admin()}} >Admin</Button>\r\n    </li>\r\n  </ul>\r\n        </nav>\r\n        \r\n        \r\n        <Switch>\r\n          <Route exact path='/' component={About} />\r\n          {/* <Route exact path='/logout' component={Logout} /> */}\r\n          <Route exact path='/search'  component={Search} />\r\n          <Route  exact path='/Teacher' component={Teacher} />\r\n          <Route  exact path='/Student' component={Student} />\r\n          {/* <Route  exact path='/Admin' component={Logcss} /> */}\r\n        </Switch>\r\n       <Footer> </Footer>\r\n        </div> \r\n    </Router>\r\n    );\r\n }\r\n}\r\n\r\nexport default Header","import React from 'react';\n\nimport './App.css';\n\nimport Logcss from './Components/Logcss';\nimport Header2 from './Front/Header2';\nimport About from './Front/About';\nimport Search from './Front/Search';\nimport Teacher from './Front/Teacher';\nimport Student from './Front/Sudent';\nimport Searchuser from './Components/Searchuser'\nimport Manageissue from './Components/Manageissue'\nimport Issue from './Components/Issue'\nimport Header from './Components/Header'\nimport { BrowserRouter as Router,Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n    <Switch>\n      <Route exact path='/' component={Header2} />\n      <Route exact path='/Header' component={Header} />\n      <Route exact path='/Logcss' component={Logcss} />\n      <Route exact path='/About' component={About} />\n          <Route exact path='/search'  component={Search} />\n          <Route  exact path='/Teacher' component={Teacher} />\n          <Route  exact path='/Student' component={Student} />\n      <Route exact path='/Searchuser' component={Searchuser} />\n          <Route  exact path='/issue' component={Issue} />\n          <Route  exact path='/manageissue' component={Manageissue} />\n    </Switch>\n</Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}